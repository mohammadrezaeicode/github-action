name: Release new Package
on: push
jobs:
  test:
    name: Running test
    timeout-minutes: 20
    continue-on-error: true
    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest,macos-13]
        version: ['14.x', '15.x', '16.x','17.x', '18.x','19.x','20.x']
    runs-on: ${{ matrix.os }}
    steps:
    - name: Checkout to code
      uses: actions/checkout@v4
    - name: install Node js Version ${{ matrix.version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.version }}
    - name: install dependency
      run: npm install
    - name: Run test
      run: npm run test
  release:
    name: Create release package
    runs-on: ubuntu-latest
    needs: test
    steps: 
    - name: Checkout to code
      uses: actions/checkout@v4
    - name: install Node js Version 20.x
      uses: actions/setup-node@v4
      with:
        node-version: '20.x' 
    - name: Run application
      run: npm run start
    - name: Retrieve Release Version
      run: echo "PV=$(node version.js)" >> $GITHUB_ENV
    - name: Retrieve Release Body
      run:  |
        {
          echo 'PB<<EOF'
          node body.js
          echo EOF
        } >> $GITHUB_ENV
    - name: Run application
      run: npm run start   
    - name: Archive Release
      uses: thedoctor0/zip-release@0.7.5
      with:
        filename: arc.zip
        exclusions: '*.git* /*node_modules/* .github version.js'
    # - name: Retrieve Version
    #   run: echo "PV=$(node version.js)" >> $GITHUB_ENV
    - run: echo ${{env.PV}}
    - name: Create Github Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{env.PV}}
        release_name: Release v${{env.PV}}
        body: ${{env.PB}}


